###########################################################
# 基础配置（必需）
###########################################################

# 站点标题 - 设置网站左上角显示的标题
# 注意：系统会自动将无前缀变量映射为VITE_前缀变量供前端使用
SITE_TITLE = Repo-Viewer

# SEO配置
SITE_DESCRIPTION = 基于MD3设计语言的GitHub仓库浏览应用
SITE_KEYWORDS = GitHub, 仓库, 浏览器, 代码, 查看器

# GitHub仓库信息 - 配置要浏览的GitHub仓库
GITHUB_REPO_OWNER = UE-DND
GITHUB_REPO_NAME = Repo-Viewer
GITHUB_REPO_BRANCH = master

###########################################################
# 内容显示控制（可选）
###########################################################

# 首页过滤 - 控制首页显示的内容
HOMEPAGE_FILTER_ENABLED = true                                    # 是否启用过滤，设置为true开启过滤功能 ｜ 默认关闭
HOMEPAGE_ALLOWED_FOLDERS = docs,src                               # 允许在首页显示的文件夹列表，以逗号分隔 ｜ 例如: docs,src,public
HOMEPAGE_ALLOWED_FILETYPES = md,pdf,txt                           # 允许在首页显示的文件类型列表，以逗号分隔，不含点号 ｜ 例如: md,pdf,txt

# 下载按钮控制 - 管理文件夹下载按钮的显示
HIDE_MAIN_FOLDER_DOWNLOAD = false                                 # 是否启用隐藏下载按钮，设置为true开启隐藏功能 ｜ 默认关闭
HIDE_DOWNLOAD_FOLDERS = node_modules,dist                         # 首页需要隐藏下载按钮的文件夹列表，以逗号分隔 ｜ 例如: node_modules,dist

# 页脚显示控制
FOOTER_LEFT_TEXT = [text](link)                                   # 页脚左侧自定义信息，支持 Markdown 链接格式 ｜ 默认为空

###########################################################
# 访问与代理设置
###########################################################

# API访问模式 - 控制API访问方式（本地开发时适用）
USE_TOKEN_MODE = false                                            # 是否启用令牌优先，本地开发时有效 ｜ 默认关闭

# GitHub访问令牌（至少需要一个）
GITHUB_PAT1 = 
GITHUB_PAT2 =

# 代理设置 - 用于文件下载和浏览（可选）
DOWNLOAD_PROXY_URL = https://gh-proxy.com                         # 主代理URL
DOWNLOAD_PROXY_URL_BACKUP1 = https://ghproxy.com                  # 备选代理1
DOWNLOAD_PROXY_URL_BACKUP2 = https://raw.staticdn.net             # 备选代理2


###########################################################
# 开发者选项（可选）
###########################################################

# 开发者模式 - 控制调试信息显示
DEVELOPER_MODE = false                                           # 是否启用开发者模式 ｜ 默认关闭

# 开发者模式启用时提供以下功能：
# - 控制台详细日志输出（API请求、文件操作、组件生命周期等）
# - 分组调试信息（应用初始化、API请求流程等）
# - 请求/响应详细信息

# 控制台日志输出
CONSOLE_LOGGING = true                                           # 是否启用控制台日志记录 ｜ 默认开启
